'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4952
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4952.
'
Namespace wsChamadas
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="kkkSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class kkk
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private remotoProdutorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private evAtivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ptAtivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ptAtivosAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private evAtivosAllOperationCompleted As System.Threading.SendOrPostCallback
        
        Private atAtivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ltAtivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private pdAtivosOperationCompleted As System.Threading.SendOrPostCallback
        
        Private presidioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private cadeiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private presidio2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private cadeia2OperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Access_Controller.My.MySettings.Default.Access_Controller_ws_kkk
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event remotoProdutorCompleted As remotoProdutorCompletedEventHandler
        
        '''<remarks/>
        Public Event evAtivosCompleted As evAtivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ptAtivosCompleted As ptAtivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ptAtivosAllCompleted As ptAtivosAllCompletedEventHandler
        
        '''<remarks/>
        Public Event evAtivosAllCompleted As evAtivosAllCompletedEventHandler
        
        '''<remarks/>
        Public Event atAtivosCompleted As atAtivosCompletedEventHandler
        
        '''<remarks/>
        Public Event ltAtivosCompleted As ltAtivosCompletedEventHandler
        
        '''<remarks/>
        Public Event pdAtivosCompleted As pdAtivosCompletedEventHandler
        
        '''<remarks/>
        Public Event presidioCompleted As presidioCompletedEventHandler
        
        '''<remarks/>
        Public Event cadeiaCompleted As cadeiaCompletedEventHandler
        
        '''<remarks/>
        Public Event presidio2Completed As presidio2CompletedEventHandler
        
        '''<remarks/>
        Public Event cadeia2Completed As cadeia2CompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/remotoProdutor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function remotoProdutor(ByRef u As String, ByVal s As String, ByRef fantasiaProdutor As String, ByRef idProdutor As Integer) As Boolean
            Dim results() As Object = Me.Invoke("remotoProdutor", New Object() {u, s, fantasiaProdutor, idProdutor})
            u = CType(results(1),String)
            fantasiaProdutor = CType(results(2),String)
            idProdutor = CType(results(3),Integer)
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub remotoProdutorAsync(ByVal u As String, ByVal s As String, ByVal fantasiaProdutor As String, ByVal idProdutor As Integer)
            Me.remotoProdutorAsync(u, s, fantasiaProdutor, idProdutor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub remotoProdutorAsync(ByVal u As String, ByVal s As String, ByVal fantasiaProdutor As String, ByVal idProdutor As Integer, ByVal userState As Object)
            If (Me.remotoProdutorOperationCompleted Is Nothing) Then
                Me.remotoProdutorOperationCompleted = AddressOf Me.OnremotoProdutorOperationCompleted
            End If
            Me.InvokeAsync("remotoProdutor", New Object() {u, s, fantasiaProdutor, idProdutor}, Me.remotoProdutorOperationCompleted, userState)
        End Sub
        
        Private Sub OnremotoProdutorOperationCompleted(ByVal arg As Object)
            If (Not (Me.remotoProdutorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent remotoProdutorCompleted(Me, New remotoProdutorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/evAtivos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function evAtivos(ByRef idProdutor As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("evAtivos", New Object() {idProdutor})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub evAtivosAsync(ByVal idProdutor As Integer)
            Me.evAtivosAsync(idProdutor, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub evAtivosAsync(ByVal idProdutor As Integer, ByVal userState As Object)
            If (Me.evAtivosOperationCompleted Is Nothing) Then
                Me.evAtivosOperationCompleted = AddressOf Me.OnevAtivosOperationCompleted
            End If
            Me.InvokeAsync("evAtivos", New Object() {idProdutor}, Me.evAtivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnevAtivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.evAtivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent evAtivosCompleted(Me, New evAtivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ptAtivos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ptAtivos(ByRef idProdutor As Integer, ByVal idEvento As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ptAtivos", New Object() {idProdutor, idEvento})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ptAtivosAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer)
            Me.ptAtivosAsync(idProdutor, idEvento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ptAtivosAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer, ByVal userState As Object)
            If (Me.ptAtivosOperationCompleted Is Nothing) Then
                Me.ptAtivosOperationCompleted = AddressOf Me.OnptAtivosOperationCompleted
            End If
            Me.InvokeAsync("ptAtivos", New Object() {idProdutor, idEvento}, Me.ptAtivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnptAtivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ptAtivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ptAtivosCompleted(Me, New ptAtivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ptAtivosAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ptAtivosAll(ByRef idProdutor As Integer, ByVal idEvento As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ptAtivosAll", New Object() {idProdutor, idEvento})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ptAtivosAllAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer)
            Me.ptAtivosAllAsync(idProdutor, idEvento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ptAtivosAllAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer, ByVal userState As Object)
            If (Me.ptAtivosAllOperationCompleted Is Nothing) Then
                Me.ptAtivosAllOperationCompleted = AddressOf Me.OnptAtivosAllOperationCompleted
            End If
            Me.InvokeAsync("ptAtivosAll", New Object() {idProdutor, idEvento}, Me.ptAtivosAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnptAtivosAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.ptAtivosAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ptAtivosAllCompleted(Me, New ptAtivosAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/evAtivosAll", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function evAtivosAll(ByRef idProdutor As Integer, ByVal idEvento As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("evAtivosAll", New Object() {idProdutor, idEvento})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub evAtivosAllAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer)
            Me.evAtivosAllAsync(idProdutor, idEvento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub evAtivosAllAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer, ByVal userState As Object)
            If (Me.evAtivosAllOperationCompleted Is Nothing) Then
                Me.evAtivosAllOperationCompleted = AddressOf Me.OnevAtivosAllOperationCompleted
            End If
            Me.InvokeAsync("evAtivosAll", New Object() {idProdutor, idEvento}, Me.evAtivosAllOperationCompleted, userState)
        End Sub
        
        Private Sub OnevAtivosAllOperationCompleted(ByVal arg As Object)
            If (Not (Me.evAtivosAllCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent evAtivosAllCompleted(Me, New evAtivosAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/atAtivos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function atAtivos(ByRef idProdutor As Integer, ByVal idEvento As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("atAtivos", New Object() {idProdutor, idEvento})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub atAtivosAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer)
            Me.atAtivosAsync(idProdutor, idEvento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub atAtivosAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer, ByVal userState As Object)
            If (Me.atAtivosOperationCompleted Is Nothing) Then
                Me.atAtivosOperationCompleted = AddressOf Me.OnatAtivosOperationCompleted
            End If
            Me.InvokeAsync("atAtivos", New Object() {idProdutor, idEvento}, Me.atAtivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnatAtivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.atAtivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent atAtivosCompleted(Me, New atAtivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ltAtivos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ltAtivos(ByRef idProdutor As Integer, ByVal idEvento As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("ltAtivos", New Object() {idProdutor, idEvento})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ltAtivosAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer)
            Me.ltAtivosAsync(idProdutor, idEvento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ltAtivosAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer, ByVal userState As Object)
            If (Me.ltAtivosOperationCompleted Is Nothing) Then
                Me.ltAtivosOperationCompleted = AddressOf Me.OnltAtivosOperationCompleted
            End If
            Me.InvokeAsync("ltAtivos", New Object() {idProdutor, idEvento}, Me.ltAtivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnltAtivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.ltAtivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ltAtivosCompleted(Me, New ltAtivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/pdAtivos", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function pdAtivos(ByRef idProdutor As Integer, ByVal idEvento As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("pdAtivos", New Object() {idProdutor, idEvento})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub pdAtivosAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer)
            Me.pdAtivosAsync(idProdutor, idEvento, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub pdAtivosAsync(ByVal idProdutor As Integer, ByVal idEvento As Integer, ByVal userState As Object)
            If (Me.pdAtivosOperationCompleted Is Nothing) Then
                Me.pdAtivosOperationCompleted = AddressOf Me.OnpdAtivosOperationCompleted
            End If
            Me.InvokeAsync("pdAtivos", New Object() {idProdutor, idEvento}, Me.pdAtivosOperationCompleted, userState)
        End Sub
        
        Private Sub OnpdAtivosOperationCompleted(ByVal arg As Object)
            If (Not (Me.pdAtivosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent pdAtivosCompleted(Me, New pdAtivosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/presidio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function presidio(ByRef idProdutor As Integer, ByVal port As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("presidio", New Object() {idProdutor, port})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub presidioAsync(ByVal idProdutor As Integer, ByVal port As Integer)
            Me.presidioAsync(idProdutor, port, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub presidioAsync(ByVal idProdutor As Integer, ByVal port As Integer, ByVal userState As Object)
            If (Me.presidioOperationCompleted Is Nothing) Then
                Me.presidioOperationCompleted = AddressOf Me.OnpresidioOperationCompleted
            End If
            Me.InvokeAsync("presidio", New Object() {idProdutor, port}, Me.presidioOperationCompleted, userState)
        End Sub
        
        Private Sub OnpresidioOperationCompleted(ByVal arg As Object)
            If (Not (Me.presidioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent presidioCompleted(Me, New presidioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cadeia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function cadeia(ByRef idProdutor As Integer, ByVal port As Integer) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("cadeia", New Object() {idProdutor, port})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub cadeiaAsync(ByVal idProdutor As Integer, ByVal port As Integer)
            Me.cadeiaAsync(idProdutor, port, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub cadeiaAsync(ByVal idProdutor As Integer, ByVal port As Integer, ByVal userState As Object)
            If (Me.cadeiaOperationCompleted Is Nothing) Then
                Me.cadeiaOperationCompleted = AddressOf Me.OncadeiaOperationCompleted
            End If
            Me.InvokeAsync("cadeia", New Object() {idProdutor, port}, Me.cadeiaOperationCompleted, userState)
        End Sub
        
        Private Sub OncadeiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.cadeiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent cadeiaCompleted(Me, New cadeiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/presidio2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function presidio2(ByRef idProdutor As Integer, ByVal port As Integer, ByVal trsn() As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("presidio2", New Object() {idProdutor, port, trsn})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub presidio2Async(ByVal idProdutor As Integer, ByVal port As Integer, ByVal trsn() As String)
            Me.presidio2Async(idProdutor, port, trsn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub presidio2Async(ByVal idProdutor As Integer, ByVal port As Integer, ByVal trsn() As String, ByVal userState As Object)
            If (Me.presidio2OperationCompleted Is Nothing) Then
                Me.presidio2OperationCompleted = AddressOf Me.Onpresidio2OperationCompleted
            End If
            Me.InvokeAsync("presidio2", New Object() {idProdutor, port, trsn}, Me.presidio2OperationCompleted, userState)
        End Sub
        
        Private Sub Onpresidio2OperationCompleted(ByVal arg As Object)
            If (Not (Me.presidio2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent presidio2Completed(Me, New presidio2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cadeia2", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function cadeia2(ByRef idProdutor As Integer, ByVal port As Integer, ByVal trsn() As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("cadeia2", New Object() {idProdutor, port, trsn})
            idProdutor = CType(results(1),Integer)
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub cadeia2Async(ByVal idProdutor As Integer, ByVal port As Integer, ByVal trsn() As String)
            Me.cadeia2Async(idProdutor, port, trsn, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub cadeia2Async(ByVal idProdutor As Integer, ByVal port As Integer, ByVal trsn() As String, ByVal userState As Object)
            If (Me.cadeia2OperationCompleted Is Nothing) Then
                Me.cadeia2OperationCompleted = AddressOf Me.Oncadeia2OperationCompleted
            End If
            Me.InvokeAsync("cadeia2", New Object() {idProdutor, port, trsn}, Me.cadeia2OperationCompleted, userState)
        End Sub
        
        Private Sub Oncadeia2OperationCompleted(ByVal arg As Object)
            If (Not (Me.cadeia2CompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent cadeia2Completed(Me, New cadeia2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub remotoProdutorCompletedEventHandler(ByVal sender As Object, ByVal e As remotoProdutorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class remotoProdutorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property u() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property fantasiaProdutor() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(2),String)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(3),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub evAtivosCompletedEventHandler(ByVal sender As Object, ByVal e As evAtivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class evAtivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub ptAtivosCompletedEventHandler(ByVal sender As Object, ByVal e As ptAtivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ptAtivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub ptAtivosAllCompletedEventHandler(ByVal sender As Object, ByVal e As ptAtivosAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ptAtivosAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub evAtivosAllCompletedEventHandler(ByVal sender As Object, ByVal e As evAtivosAllCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class evAtivosAllCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub atAtivosCompletedEventHandler(ByVal sender As Object, ByVal e As atAtivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class atAtivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub ltAtivosCompletedEventHandler(ByVal sender As Object, ByVal e As ltAtivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ltAtivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub pdAtivosCompletedEventHandler(ByVal sender As Object, ByVal e As pdAtivosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class pdAtivosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub presidioCompletedEventHandler(ByVal sender As Object, ByVal e As presidioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class presidioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub cadeiaCompletedEventHandler(ByVal sender As Object, ByVal e As cadeiaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class cadeiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub presidio2CompletedEventHandler(ByVal sender As Object, ByVal e As presidio2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class presidio2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")>  _
    Public Delegate Sub cadeia2CompletedEventHandler(ByVal sender As Object, ByVal e As cadeia2CompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class cadeia2CompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
        
        '''<remarks/>
        Public ReadOnly Property idProdutor() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(1),Integer)
            End Get
        End Property
    End Class
End Namespace
